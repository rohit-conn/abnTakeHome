- hosts: localhost
  connection: local
  vars:
    app: "{{ app_name  | default('backend_api') }}"
    docker_repo: "{{ docker_repo_name | default('deathsphinx') }}"
    docker_backend_image_tag: latest
    docker_health_image_tag: health

    release_namespace: default


  tasks:

    - name: Install pip
      ansible.builtin.package:
        name: python3-pip
        state: present

    - name: Install python dependencies
      ansible.builtin.pip:
        name: 
          - docker
          - pyaml
          - docker
          - kubernetes
        state: present
        executable: pip3

    - name: Build backend-api docker container
      community.docker.docker_image:
        build:
          path: ./backend_api
        name: "{{ docker_repo }}/{{ app }}"
        tag: "{{ docker_backend_image_tag }}"
        push: true
        source: build
       
    - name: Build backend-api health docker container
      community.docker.docker_image:
        build:
          path: ./backend_api
          dockerfile: healthDockerfile
        name: "{{ docker_repo }}/{{ app }}"
        tag: "{{ docker_health_image_tag }}"
        push: true
        source: build

    - name: Stat the directory
      ansible.builtin.stat:
        path: "{{ playbook_dir }}/backendapihelm"
      register: result

    - name: Create EXTERNAL_INTEGRATION_KEY to be consumed by backend-api endpoint
      kubernetes.core.k8s:
        state: present
        definition: 
          apiVersion: v1
          kind: Secret
          type: Opaque             
          metadata:
            name: external-integration-key
            namespace: default     
          data:
            KEY: "{{ EXTERNAL_INTEGRATION_KEY | b64encode }}"

    - name: Deploy backend api helm
      kubernetes.core.helm:
        name: backend-api
        chart_ref: "{{ result.stat.path }}"
        release_namespace: default
        create_namespace: false
        values:
          image:
            repository: "{{ docker_repo }}/{{ app }}"
            tag: "{{ docker_backend_image_tag }}"
            healthtag: "{{ docker_health_image_tag }}"